import type { NextPage } from 'next'
import Head from 'next/head'
import { trpc } from '../../utils/trpc'
import { useRouter } from 'next/router'
import { useSession } from 'next-auth/react'
import AppHeader from '../../components/app-header'
import PostEditor from '../../components/post-editor'
import LoadingPageShell from '../../components/loading-page-shell'

const Post: NextPage = () => {
  const { status } = useSession()
  const router = useRouter()
  const postMutation = trpc.useMutation(['blog.createPost'])

  const createPost = async ({
    content,
    tagline,
    title,
  }: {
    content: string
    tagline: string
    title: string
  }) => {
    const post = await postMutation.mutateAsync({
      content,
      tagline,
      title,
    })
    if (post) {
      router.push('/post/' + post.slug)
    }
  }

  if (status === 'loading') {
    return <LoadingPageShell />
  }

  if (status === 'unauthenticated') {
    router.push('/')
  }

  return (
    <>
      <Head>
        <title>Create Post</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col">
        <AppHeader></AppHeader>
        <PostEditor
          isSubmitting={postMutation.isLoading}
          onSubmit={createPost}
        ></PostEditor>
      </div>
    </>
  )
}

export default Post
